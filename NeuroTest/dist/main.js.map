{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/formulario-registro/formulario-registro.component.ts","./src/app/components/formulario-registro/formulario-registro.component.html","./src/app/components/informacion/informacion.component.ts","./src/app/components/informacion/informacion.component.html","./src/app/components/inicio/inicio.component.ts","./src/app/components/inicio/inicio.component.html","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/main.ts"],"sourcesContent":["import { TestComponent } from './components/test/test.component';\r\nimport { InformacionComponent } from './components/informacion/informacion.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { InicioComponent } from './components/inicio/inicio.component';\r\nimport { FormularioRegistroComponent } from './components/formulario-registro/formulario-registro.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component: InicioComponent },\r\n  { path: 'registro', component: FormularioRegistroComponent},\r\n  {path: 'informacion', component: InformacionComponent},\r\n  {path: 'test',component: TestComponent},\r\n  {path: '**', redirectTo: 'informacion'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private router: Router) { }\r\n  \r\n  onClick(ruta: string) {\r\n    this.router.navigateByUrl(ruta);\r\n  }\r\n  \r\n}\r\n","<div class=\"page-container\">\r\n  <header>\r\n    <div class=\"tittle-container\">\r\n      <h1> NEUROTEST 🧠 </h1>\r\n    </div>\r\n\r\n\r\n\r\n  </header>\r\n\r\n\r\n</div>\r\n\r\n<hr>\r\n<div class=\"container\">\r\n\r\n  <nav>\r\n    <ul>\r\n      <li [routerLink]=\"['/']\" routerLinkActive=\"activo\" [routerLinkActiveOptions]=\"{ exact: true }\">Inicio</li>\r\n      <li [routerLink]=\"['/informacion']\" routerLinkActive=\"activo\">Información</li>\r\n      <li [routerLink]=\"['/test']\" routerLinkActive=\"activo\">Test</li>\r\n\r\n\r\n    </ul>\r\n  </nav>\r\n\r\n</div>\r\n<div class=\"position\">\r\n\r\n  <router-outlet></router-outlet>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { InicioComponent } from './components/inicio/inicio.component';\r\nimport { InformacionComponent } from './components/informacion/informacion.component';\r\nimport { TestComponent } from './components/test/test.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormularioRegistroComponent } from './components/formulario-registro/formulario-registro.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InicioComponent,\r\n    InformacionComponent,\r\n    TestComponent,\r\n    FormularioRegistroComponent,\r\n  \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder,FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-formulario-registro',\r\n  templateUrl: './formulario-registro.component.html',\r\n  styleUrls: ['./formulario-registro.component.css']\r\n})\r\nexport class FormularioRegistroComponent {\r\n\r\n  formulario: FormGroup;\r\n  userService: any;\r\n  router: any;\r\n\r\n  constructor(private FormBuilder: FormBuilder) {\r\n    this.formulario = this.FormBuilder.group({\r\n      nombre: [null, [Validators.required]],\r\n      apellidos: [null],\r\n      email: [null, [Validators.email]],\r\n      password: []\r\n    })\r\n  }\r\n  async onSubmit() {\r\n     console.log(this.formulario.value)\r\n    try {\r\n      const response = await this.userService.register(this.formulario.value);\r\n      alert('Usuario registrado correctamente');\r\n      localStorage.setItem('token_crm', response.token!);\r\n      this.router.navigateByUrl('/gestion');\r\n    } catch (error) {\r\n      alert('Error en el registro')\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\n","<form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\">\r\n\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Nombre</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Apellidos</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"apellidos\">\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Email</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"email\">\r\n    </div>\r\n\r\n    <div class=\"mb-3\">\r\n        <label class=\"form-label\">Password</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"password\">\r\n    </div>\r\n\r\n    <input type=\"submit\" value=\"Enviar\" class=\"btn btn-info\">\r\n</form>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-informacion',\r\n  templateUrl: './informacion.component.html',\r\n  styleUrls: ['./informacion.component.css']\r\n})\r\nexport class InformacionComponent {\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"pregunta\">\r\n        <h1>\r\n            ¿Cómo se ha formado Neurotest?\r\n        </h1>\r\n    </div>\r\n\r\n    <div class=\"info-1\">\r\n        <p>Neurotest ha sido creada por dos programadores Jaime y Laureana para su TFG.<br> Esta aplicación está pensada\r\n            para que los especialistas en neuropsicología puedan acceder<br> rápidamente mediante el registro de unos\r\n            datos\r\n            de paciente a un test, donde podrán hacer sus evaluaciones.</p>\r\n\r\n    </div>\r\n    <div class=\"preguntados\">\r\n        <h1>\r\n            ¿Cómo funciona Neurotest?\r\n        </h1>\r\n    </div>\r\n    <div class=\"info-2\">\r\n        <p>Para usar este repositorio no necesitas más que meter los datos que te interesen en el formulario<br> que\r\n            tienes\r\n            disponible en el apartado <strong>Test</strong> y tendrás disponibles los test que necesites.</p>\r\n    </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-inicio',\r\n  templateUrl: './inicio.component.html',\r\n  styleUrls: ['./inicio.component.css']\r\n})\r\nexport class InicioComponent {\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Evaluación Neuropsicológica</h1>\r\n    <p>\r\n        La evaluación neuropsicológica es un proceso utilizado para examinar las funciones cognitivas, emocionales y del\r\n        comportamiento de una persona a través de la evaluación de su función cerebral. Estas evaluaciones son llevadas\r\n        a cabo por neuropsicólogos, profesionales entrenados en la intersección de la psicología y la neurología.\r\n    </p>\r\n    <p>\r\n        La evaluación neuropsicológica implica una variedad de pruebas diseñadas para medir diferentes áreas del\r\n        funcionamiento cognitivo, como la memoria, la atención, la percepción, el lenguaje, las habilidades\r\n        visuoespaciales, la función ejecutiva y las habilidades motoras. Estas pruebas pueden incluir tareas de memoria,\r\n        rompecabezas, ejercicios de resolución de problemas, pruebas de velocidad de procesamiento y evaluaciones de\r\n        habilidades lingüísticas, entre otras.\r\n    </p>\r\n    <p>\r\n        Los resultados de la evaluación neuropsicológica pueden proporcionar información crucial para el diagnóstico y\r\n        el tratamiento de una variedad de condiciones médicas y psicológicas, como lesiones cerebrales traumáticas,\r\n        accidentes cerebrovasculares, trastornos del desarrollo, trastornos del aprendizaje, trastornos del estado de\r\n        ánimo y enfermedades neurodegenerativas como el Alzheimer y el Parkinson.\r\n    </p>\r\n    <p>\r\n        Además de ayudar en el diagnóstico, la evaluación neuropsicológica también puede ser útil para la planificación\r\n        de intervenciones y tratamientos personalizados, así como para el seguimiento del progreso a lo largo del\r\n        tiempo.\r\n    </p>\r\n    <p>\r\n        La evaluación neuropsicológica es un proceso complejo y compuesto por fases. En ningún caso esta web sustituye\r\n        la labor de un profesional: simplemente es una herramienta que facilita la navegación entre las muchas pruebas\r\n        que se pueden utilizar.\r\n    </p>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css'],\r\n})\r\nexport class TestComponent{\r\n\r\n  test: FormGroup;\r\n  tests: any[] = [];\r\n  hasSend: boolean = false;\r\n  errorMsg: string = \"\";\r\n  isFormValid: boolean = true;\r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) {\r\n    this.test = this.formBuilder.group({\r\n      tiempoSesion: ['', [Validators.required, Validators.maxLength(2)]],\r\n      nivelEducativo: ['', Validators.required],\r\n      edadPaciente: ['', [Validators.required, Validators.maxLength(2)]],\r\n    });\r\n  }\r\n\r\n\r\n  enviar() {\r\n   if(this.test.valid){\r\n    this.isFormValid = true;\r\n    const headers = { 'content-type': 'application/json' };\r\n    const body = JSON.stringify(this.test.value);\r\n    \r\n    this.http.post<any>('http://localhost/tfg-fp/manejoDatos.php', body, { 'headers': headers })\r\n      .subscribe(response => {\r\n        if(response.errors){\r\n          this.errorMsg = response.errors;   \r\n        }else{\r\n          this.errorMsg = \"\";\r\n          this.tests = Object.values(response);\r\n        }\r\n        this.hasSend = true; \r\n      });\r\n  }else{\r\n    this.isFormValid = false;\r\n    this.hasSend = false;\r\n  }\r\n}\r\n\r\n}\r\n\r\n\r\n\r\n","<div class=\"container\">\n  <h1>Formulario neuropsicología</h1>\n  <form [formGroup]=\"test\" id=\"formularioNeuro\" novalidate class=\"form\" action=\"#\" method=\"POST\">\n    <label for=\"tiempoSesion\">Tiempo disponible para la sesión (en minutos):</label>\n    <input type=\"number\" formControlName=\"tiempoSesion\" name=\"tiempoSesion\" required>\n\n    <label for=\"nivelEducativo\">Nivel educativo:</label>\n    <select name=\"nivelEducativo\" formControlName=\"nivelEducativo\" id=\"nivelEducativo\" required>\n      <option value=\"1\">Primaria (12 años de educación o menos)</option>\n      <option value=\"2\">Secundaria (entre 12 y 16 años de educación)</option>\n      <option value=\"3\">Superior (más de 16 años de educación)</option>\n    </select><br><br>\n\n    <label for=\"edadPaciente\">Edad del paciente:</label>\n    <input type=\"number\" formControlName=\"edadPaciente\" id=\"edadPaciente\" name=\"edadPaciente\" required><br><br>\n    <br>\n    <!--Este if comprueba si no se han rellenado los campos y muestra ese párrafo-->\n    <button class=\"btn btn-exito\" (click)=\"enviar()\">Enviar</button>\n    @if(!isFormValid){\n      <p style=\"color:red\">Rellena todos los campos</p>\n    }\n  </form>\n\n  <!-- Si envías respuesta y tiene información aparece la tabla, si no hay tests aparecerá \"no hay tests\"-->\n@if (hasSend) {\n\n  @if (!errorMsg) {\n\n    <h2>Pruebas recomendadas:</h2>\n\n  <table>\n        <tr>\n          <th>Nombre</th>\n          <th>Descripción</th>\n          <th>Tiempo Requerido</th>\n        </tr>\n        <tr *ngFor=\"let test of tests\">\n          <td>{{test.test_nombre}}</td>\n          <td>{{test.descripcion}}</td>\n          <td>{{test.tiempo_requerido}}</td>\n        </tr>\n  </table>\n\n  }@else {\n\n    {{errorMsg}}\n  }\n} \n</div>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["TestComponent","InformacionComponent","RouterModule","InicioComponent","FormularioRegistroComponent","routes","path","component","redirectTo","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","router","onClick","ruta","navigateByUrl","i0","ɵɵdirectiveInject","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2","_c3","BrowserModule","HttpClientModule","ReactiveFormsModule","AppModule","bootstrap","declarations","Validators","FormBuilder","formulario","group","nombre","required","apellidos","email","password","onSubmit","_this","_asyncToGenerator","console","log","value","response","userService","register","alert","localStorage","setItem","token","error","FormularioRegistroComponent_Template","ɵɵlistener","FormularioRegistroComponent_Template_form_ngSubmit_0_listener","InformacionComponent_Template","InicioComponent_Template","ɵɵtextInterpolate","test_r1","test_nombre","descripcion","tiempo_requerido","ɵɵtemplate","TestComponent_Conditional_27_Conditional_0_tr_10_Template","ctx_r1","tests","ɵɵtextInterpolate1","errorMsg","TestComponent_Conditional_27_Conditional_0_Template","TestComponent_Conditional_27_Conditional_1_Template","ɵɵconditional","formBuilder","http","hasSend","isFormValid","test","tiempoSesion","maxLength","nivelEducativo","edadPaciente","enviar","valid","headers","body","JSON","stringify","post","subscribe","errors","Object","values","i2","HttpClient","TestComponent_Template","TestComponent_Template_button_click_24_listener","TestComponent_Conditional_26_Template","TestComponent_Conditional_27_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}